@page "/add-event"
@using BusinessLayer.Interfaces
@using Entities.DTO
@rendermode InteractiveServer

@attribute [Authorize(Roles = "Administrator")]

@inject NavigationManager NavManager;
@inject IEventBusiness eventBusiness;

<div class="container d-flex justify-content-center align-items-center" style="height:80vh;">
    <div class="card shadow-lg border-0 rounded-4">
        <div class="card-header bg-primary text-white text-center rounded-top-4">
            <h3 class="mb-0">EVENT</h3>
        </div>

        <div class="card-body p-4">

            <form @onsubmit="HandleSubmit">
                <div class="form-group mb-3">
                    <label class="form-label">Naziv:</label>
                    <input class="form-control form-control-lg" @bind="eventModel.Name" />
                </div>

                <div class="form-group mb-4">
                    <label class="form-label">Datum i vreme:</label>
                    <input type="datetime-local" class="form-control form-control-lg" @bind="eventModel.EventDate" />
                </div>

                <div class="form-group mb-4">
                    <label class="form-label">Lokacija:</label>
                    <input class="form-control form-control-lg" @bind="eventModel.Location" />
                </div>

                <div class="d-grid">
                    <button class="btn btn-primary btn-lg" type="submit">Dodaj dogadjaj</button>
                </div>
            </form>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(Message))
    {
        <div class="alert @(Success?"alert-success":"alert-danger")">
            @Message
        </div>
    }
</div>

@code{
    private EventDTO eventModel = new();
    private bool Success;
    private string? Message;

    protected override void OnInitialized()
    {
        eventModel.EventDate = DateTime.Now;
    }

    private async Task HandleSubmit()
    {
        var result = await eventBusiness.AddEvent(eventModel);

        Success = result.Success;
        Message = result.Message;

        if (Success)
        {
            NavManager.NavigateTo("/");
        }
    }
}